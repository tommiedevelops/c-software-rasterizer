17/08/25

* successfully removed pixel.* modules which sped up program significantly. it's now running at minimum 50fps whereas before
it was around 5fps. 
* getting rid of the mallocs each frame dramatically sped up the program!
* now just need to implement barycentric coords again to rasterize the triangles properly
* also need to implement zbuffer to cull backfaces

19/08/25
* spent a while trying to debug zbuffer stuff. got stuck because i don't know exact position of camera (pos z inf or neg z inf?)
* eventually got someting working but it appears to chop the bunny in half (probably something to do with negative values)
* need to debug further. demo: https://drive.google.com/file/d/1_DxiqoNhu3OlH_KBBLPmDgHHxaBPGjX8/view?usp=drive_link

22/08/25
* there are some visual artifacts on the 3D render. I used a very simple lighting model to flat shade the .obj. 
* The artifacts include random horizontal and vertical lines. Will debug today. demo: https://drive.google.com/file/d/1bPZyXsM5UkKR6BHqA6qJ0xTAO5pDQ1xs/view?usp=drive_link
* ok i fixed the artifacts. i now want to have look at texturing the bunny. i want to spend some time researching and understanding how 3D objects are usually textured in memory.

24/08/24
* there are two main things to work on from here. fragment shader / textures / material and perspective correction. 
* the latter requires studying the maths a bit more deeply - going into the various vector spaces and the relevant transforms
* the former requires understanding textures, fragment shaders and materials better
* I've decided to focus on perspective correction

25/08/25
* today, I will focus on completing the perspective correction algorithm.
* today, wrote notes on linear/affine transformations and homogenous coordinates as well as clipping
* would be good to have a directory in the repository containing all of my study notes written in LaTeX / md except i haven't designed a workflow for that just yet.

26/08/25
* still focusing on implementing perspective projection* (not correction lol). I'm still spending time understanding the concepts.
* I've decided to include an AABB in struct Camera that matches Vulcan's canonical view volume. (Just so I have something to work with)
* I have decided to focus on deriving the Transform matrix first which converts vertices from Model space into World Space.
* The transform matrix is composed of the scale, rotation and translation operations (which themselves are matrices)

27/08/25
* My goal today is to implement the Model, View and Projection matrices as well as Viewport matrix
* I'm also thinking about how this repository will look as a finished product. I would like to write brief LaTeX pdf outlining the projct structure and the main concepts
* I would also like to have some cloud repository that stores clean .obj files that can be used.

28/08/25
* completed quaternion module and composed translation, rotation and scale matrices into the model matrix. however, result is very buggy. need to debug 
* first clue is probably the dodgy (struct Vec3f*) cast that I do onto the struct Vec4f* because I couldn't be bothered re-writing my rasterizer. Once I finish all the matrices, I won't need to re-write the rasterizer though so I'll probably just try to debug this workaround.

29/09/25
* Currently I'm debugging get_model_matrix by writing tests for each of the Transform matrices
* I think I need to VERY explicit with my coordinate axes. By convention, in View Space AND Screen Space: into the camera = positive z. the 'down' direction is positive y. the 'right' direction in positive x. This is with respect to the Camera, so imagine you are looking through the camera / screen. 
* I successfully debugged it by added some temporary lines of code to convert the Vec4f* into a Vec3f*. 
* It seems to work when I apply the model matrix altogether. I haven't really tested scale and translation matrices visually though. 
* There appears to be some weird shearing and scaling when I apply the rotation matrix alogn the x and z axes. Maybe to do with normalization issues? Need to investigate further.
 
30/08/25
* Quaternion Maths and, to be honest, rotation maths is still very confusing for me. It would be beneficial for me to do a review + some practice questions
